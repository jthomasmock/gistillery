[{"path":"https://jthomasmock.github.io/gistillery/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 gistillery authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jthomasmock.github.io/gistillery/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Mock. Maintainer.","code":""},{"path":"https://jthomasmock.github.io/gistillery/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mock T (2022). gistillery: Upload Code Github Gists Take Code Screenshots via Carbon. https://github.com/jthomasmock/gistillery, https://jthomasmock.github.io/gistillery/.","code":"@Manual{,   title = {gistillery: Upload Code to Github Gists and Take Code Screenshots via Carbon},   author = {Thomas Mock},   year = {2022},   note = {https://github.com/jthomasmock/gistillery, https://jthomasmock.github.io/gistillery/}, }"},{"path":"https://jthomasmock.github.io/gistillery/index.html","id":"gistillery-","dir":"","previous_headings":"","what":"Upload code to Github Gists and to Carbon","title":"Upload code to Github Gists and to Carbon","text":"goal gistillery make outrageously simple take local code, send Github gist, get beautiful image Carbon.now.sh, make ready share! packages operate space: gistr ROpenSci - provides powerful general interface Gists. taken different approach internally httr2, inspired interface. gistfo Miles McBain/Garrick Aden-Buie, usefully opinionated “Get Somewhere F*** Online” package. also adapted concepts package.. carbonate Jonathan Sidi. robust approach similar problem. carbonate uses R6 classes RSelenium. Rather using RSelenium, gistillery uses webshot2 take screenshot code chromote.","code":""},{"path":"https://jthomasmock.github.io/gistillery/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Upload code to Github Gists and to Carbon","text":"can install development version gistillery GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"jthomasmock/gistillery\")"},{"path":"https://jthomasmock.github.io/gistillery/index.html","id":"core-workflow","dir":"","previous_headings":"","what":"Core Workflow","title":"Upload code to Github Gists and to Carbon","text":"three core functions, providing three steps process. Take code upload Gist, take screenshot , add image url Gist. Importantly, steps required completed via workflow. can take existing Gists use components functions rather stick end--end workflow. Please note Github Authentication required affect Gists, ’ll need reference gistr docs Generate personal access token gist scope selected, set GITHUB_PAT environment variable per session using Sys.setenv across sessions adding .Renviron file similar. See https://help.github.com/articles/creating--access-token--command-line-use help","code":""},{"path":"https://jthomasmock.github.io/gistillery/index.html","id":"step-1","dir":"","previous_headings":"Core Workflow","what":"Step 1","title":"Upload code to Github Gists and to Carbon","text":"can use gist_upload() take code file (via readLines), reprex/clipboard via clipr::read_clip(), unsaved file via rstudioapi. Note also attaches Gist URL bottom code snippet, eventually share code image people can still access copy-pastable code! (borrowed gistfo, original idea)","code":"# Load the functions library(gistillery) # this will use rstudioapi to take ALL the code from the currently # highlighted file inside RStudio # Workflow similar to core gistfo  gist_upload(content = NULL, gist_name = \"unsaved15.R\") # We can take an existing file, and throw it up as a Gist quickly gist_upload(content = readLines(\"mylocal-file.R\"), gist_name = \"local-file.R\")  # Or we can take some code from the clipboard gist_upload(content = clipr::read_clip(), gist_name = \"copy-pasted-code.R\") # or even a reprex gist_upload(reprex::reprex(), gist_name = \"test-prex.R\")  # or save the reprex to an object first test_reprex <- reprex::reprex() gist_upload(test_reprex, gist_name = \"reprex-object.R\")"},{"path":"https://jthomasmock.github.io/gistillery/index.html","id":"step-2","dir":"","previous_headings":"Core Workflow","what":"Step 2","title":"Upload code to Github Gists and to Carbon","text":"Regardless got code Gist, can move step 2 get code carbon.now.sh beautiful screenshots. takes unique id Gist returns lovely screenshot. Note want share screenshot also appends gist URL bottom image. also include alt-text linking Gist! screenshot code, full code available : https://gist.github.com/jthomasmock/17adcd1a401bec0e41cbd671048ff0b4 want go customization, can change background color bg, code theme theme, monospace font font, programming language lang optionally turn /“upload Imgur” feature. imgur=TRUE option give immediate URL can embed code elsewhere without actually upload full image . can also set parameters via options like : options(gistillery.bg = \"#d3d3d3\", gistillery.theme = \"cobalt\", gistillery.font = \"Fira+Code\")","code":"# core workflow # specify the gist id to get code from # specify the name of the output png gist_to_carbon(   gist_id = \"17adcd1a401bec0e41cbd671048ff0b4\",    file = \"my-screenshot.png\"   )"},{"path":"https://jthomasmock.github.io/gistillery/index.html","id":"step-3","dir":"","previous_headings":"Core Workflow","what":"Step 3","title":"Upload code to Github Gists and to Carbon","text":"Now local image Imgur link, can use third function. add_gist_img take existing gist append Imgur link code , way can programmatically add screenshot URL back specific Gists. Alternatively, can use Imgur link include code places ’s inconvenient use local image files can’t format code properly. can also use gist_comment() upload markdown-styled image comments existing Gist, like : add comment existing gist, adding markdown image.","code":"gist_append_img(   imgur_url = \"https://i.imgur.com/UEkGyx7.png\",    gist_id = \"17adcd1a401bec0e41cbd671048ff0b4\"   ) gist_comment(gist_id, \"![](some-valid-imgur-url.png)\")"},{"path":"https://jthomasmock.github.io/gistillery/index.html","id":"step-n--1","dir":"","previous_headings":"Core Workflow","what":"Step N + 1","title":"Upload code to Github Gists and to Carbon","text":"Now next step, may want post Twitter somewhere else. ask use alt-text link Github can assist screen-reader users folks just want copy-paste code! 2022-05-09, can use GitHub version rtweet::post_tweet() post tweets, images, alt-text. IE:","code":"rtweet::post_tweet(   status = \"My cool code screenshot\",   media = \"my-screenshot.png\",   media_alt_text = \"This is a screenshot of some R code. The code is available at https://gist.github.com/jthomasmock/17adcd1a401bec0e41cbd671048ff0b4. I have also copy-pasted the code below:      # core workflow   gist_to_carbon(     gist_id = '17adcd1a401bec0e41cbd671048ff0b4',      file = 'my-screenshot.png'   )   \" )"},{"path":"https://jthomasmock.github.io/gistillery/index.html","id":"reprex_shot","dir":"","previous_headings":"Core Workflow","what":"reprex_shot()","title":"Upload code to Github Gists and to Carbon","text":"last function, reprex_shot() local workflow. Calling function execute reprex::reprex() save HTML image disk. fine want quickly get local screenshot gist url attached screenshot.","code":"reprex_shot(filename = \"my-local-reprex.png\")"},{"path":"https://jthomasmock.github.io/gistillery/index.html","id":"altogether","dir":"","previous_headings":"Core Workflow","what":"Altogether","title":"Upload code to Github Gists and to Carbon","text":"wanted, used pipe based workflow get seamless reprex -> upload Gist -> screenshot Carbon.","code":"reprex::reprex() |>    gistillery::gist_upload(gist_name = \"new-test-reprex.R\") |>    gistillery::gist_to_carbon(file = \"new-test-reprex.png\")"},{"path":"https://jthomasmock.github.io/gistillery/reference/carbon_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"Carbon fonts — carbon_fonts","title":"Carbon fonts — carbon_fonts","text":"list available fonts carbon supports.","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/carbon_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Carbon fonts — carbon_fonts","text":"","code":"carbon_fonts"},{"path":"https://jthomasmock.github.io/gistillery/reference/carbon_fonts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Carbon fonts — carbon_fonts","text":"object class character length 13.","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/carbon_fonts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Carbon fonts — carbon_fonts","text":"Sourced : <https://github.com/carbon-app/carbon/blob/main/lib/constants.js>","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/carbon_fonts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Carbon fonts — carbon_fonts","text":"","code":"{ carbon_fonts } #>  [1] \"Anonymous+Pro\"       \"Cascadia+Code\"       \"Droid+Sans+Mono\"     #>  [4] \"Fantasque+Sans+Mono\" \"Fira+Code\"           \"Hack\"                #>  [7] \"IBM+Plex+Mono\"       \"Inconsolata\"         \"JetBrains+Mono\"      #> [10] \"Monoid\"              \"Source+Code+Pro\"     \"Space+Mono\"          #> [13] \"Ubuntu+Mono\""},{"path":"https://jthomasmock.github.io/gistillery/reference/carbon_themes.html","id":null,"dir":"Reference","previous_headings":"","what":"Carbon themes — carbon_themes","title":"Carbon themes — carbon_themes","text":"list available themes supported Carbon.","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/carbon_themes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Carbon themes — carbon_themes","text":"","code":"carbon_themes"},{"path":"https://jthomasmock.github.io/gistillery/reference/carbon_themes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Carbon themes — carbon_themes","text":"object class character length 29.","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/carbon_themes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Carbon themes — carbon_themes","text":"Sourced <https://github.com/carbon-app/carbon/blob/main/lib/constants.js>","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/carbon_themes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Carbon themes — carbon_themes","text":"","code":"{ carbon_themes } #>  [1] \"3024-night\"       \"a11y-dark\"        \"blackboard\"       \"base16-dark\"      #>  [5] \"base16-light\"     \"cobalt\"           \"dracula\"          \"duotone-dark\"     #>  [9] \"hopscotch\"        \"lucario\"          \"material\"         \"monokai\"          #> [13] \"night-owl\"        \"nord\"             \"oceanic-next\"     \"one-light\"        #> [17] \"one-dark\"         \"panda-syntax\"     \"paraiso-dark\"     \"seti\"             #> [21] \"shades-of-purple\" \"solarized dark\"   \"solarized light\"  \"synthwave-84\"     #> [25] \"twilight\"         \"verminal\"         \"vscode\"           \"yeti\"             #> [29] \"zenburn\""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_append_img.html","id":null,"dir":"Reference","previous_headings":"","what":"Add imgur-hosted URL to existing gist as a ","title":"Add imgur-hosted URL to existing gist as a ","text":"Add imgur-hosted URL existing gist \"comment\" bottom script.","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_append_img.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add imgur-hosted URL to existing gist as a ","text":"","code":"gist_append_img(imgur_url, gist_id = NULL)"},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_append_img.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add imgur-hosted URL to existing gist as a ","text":"imgur_url Existing URL imgur, typically created gistillery::gist_to_carbon() gist_id Unique ID existing Github Gist - comment added.","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_append_img.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add imgur-hosted URL to existing gist as a ","text":"Adds commented line bottom existing Gist code","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_comment.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a comment to an existing gist — gist_comment","title":"Add a comment to an existing gist — gist_comment","text":"Add comment existing gist","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_comment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a comment to an existing gist — gist_comment","text":"","code":"gist_comment(   gist_id = \"73b34a7d484360036fee122c5a745f44\",   comment = \"![](https://pbs.twimg.com/media/FBGfjADUYAUxiPz?format=png)\" )"},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_comment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a comment to an existing gist — gist_comment","text":"gist_id Character string indicating gist ID comment comment text","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_comment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a comment to an existing gist — gist_comment","text":"string comment text","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_to_carbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Take an existing gist, send to carbon, and save the image locally — gist_to_carbon","title":"Take an existing gist, send to carbon, and save the image locally — gist_to_carbon","text":"Take existing gist, send carbon, save image locally","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_to_carbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take an existing gist, send to carbon, and save the image locally — gist_to_carbon","text":"","code":"gist_to_carbon(   gist_id,   file = \"code.png\",   bg = getOption(\"gistillery.bg\", default = \"#4A90E2\"),   theme = getOption(\"gistillery.theme\", default = \"night-owl\"),   font = getOption(\"gistillery.font\", default = \"Hack\"),   lang = \"auto\",   imgur = TRUE,   drop_shadow = TRUE,   width = 680,   width_auto_adjust = TRUE )"},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_to_carbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take an existing gist, send to carbon, and save the image locally — gist_to_carbon","text":"gist_id unique id existing gist, can piped gist_upload() passed manually. file name file printing, eg code.png bg valid hex code color, ie #D3D3D3 theme valid theme, \"cobalt\", \"nord\", \"night-owl\", \"monokai\" - available themes, see `carbon_themes` font valid font ID \"IBM+Plex+Mono\", \"Hack\", \"Fira+Code\" - available fonts, see `carbon_fonts` lang language syntax highlighting, ie one \"python\", \"r\", \"yaml\", \"markdown\", \"text\", \"auto\" imgur logical, image also uploaded imgur. drop_shadow Logical indicating whether include drop shadow screenshot. width number, indicating width pixels screenshot width_auto_adjust Logical indicating whether auto adjust width better code-printing","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_to_carbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take an existing gist, send to carbon, and save the image locally — gist_to_carbon","text":"Saves image disk optionally returns uploaded imgur URL","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Take local code and upload to a named gist — gist_upload","title":"Take local code and upload to a named gist — gist_upload","text":"Take local code upload named gist","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take local code and upload to a named gist — gist_upload","text":"","code":"gist_upload(   content = NULL,   gist_name = NULL,   description = \"\",   public = TRUE,   browse = TRUE )"},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take local code and upload to a named gist — gist_upload","text":"content code, either currently highlighted file manually indicated code gist_name valid filename ie -code.R description brief description gist purpose public logical, defaults TRUE, indicates whether make gist public browse logical, defaults TRUE, indicates whether open new gist browser ","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/gist_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take local code and upload to a named gist — gist_upload","text":"gist id gist URL clipboard, can piped directly gist_to_carbon","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/git_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authorize with GitHub. — git_auth","title":"Authorize with GitHub. — git_auth","text":"function run automatically allow gistillery access GitHub account. adapted gistr::gist_auth","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/git_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authorize with GitHub. — git_auth","text":"","code":"git_auth(app = gistr_app, reauth = FALSE)"},{"path":"https://jthomasmock.github.io/gistillery/reference/git_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authorize with GitHub. — git_auth","text":"app [httr::oauth_app()] GitHub. default uses application `gistr_oauth` created Scott Chamberlain. reauth (logical) Force re-authorization?","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/git_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authorize with GitHub. — git_auth","text":"character string - used downstream auth various functions","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/git_auth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Authorize with GitHub. — git_auth","text":"two ways authorise gistillery work GitHub account: - Generate personal access token gist scope selected, set `GITHUB_PAT` environment variable per session using `Sys.setenv` across sessions adding `.Renviron` file similar. See https://help.github.com/articles/creating--access-token--command-line-use help - Interactively login GitHub account authorise OAuth. Using `GITHUB_PAT` recommended.","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. httr2 %>%","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/reprex_shot.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a reprex::reprex() and take a local screenshot of the reprex output — reprex_shot","title":"Execute a reprex::reprex() and take a local screenshot of the reprex output — reprex_shot","text":"reprex_shot() first take reprex capture HTML output -disk image, optionally uploading image Imgur.","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/reprex_shot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a reprex::reprex() and take a local screenshot of the reprex output — reprex_shot","text":"","code":"reprex_shot(filename = NULL, ..., open_file = TRUE, imgur = FALSE)"},{"path":"https://jthomasmock.github.io/gistillery/reference/reprex_shot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a reprex::reprex() and take a local screenshot of the reprex output — reprex_shot","text":"filename filename, ending .png ... additional arguments passed reprex::reprex() open_file logical, file opened saved imgur logical, image uploaded imgur also","code":""},{"path":"https://jthomasmock.github.io/gistillery/reference/reprex_shot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a reprex::reprex() and take a local screenshot of the reprex output — reprex_shot","text":"screenshot reprex disk","code":""},{"path":"https://jthomasmock.github.io/gistillery/news/index.html","id":"gistillery-025","dir":"Changelog","previous_headings":"","what":"gistillery 0.2.5","title":"gistillery 0.2.5","text":"Added NEWS.md file track changes package. Removed gistr dependency, refactored gistr code custom httr2 Added support gitcreds::gitcreds_get() token per Issue #3","code":""}]
